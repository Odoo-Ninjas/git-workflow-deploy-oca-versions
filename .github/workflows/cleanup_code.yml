# https://docs.github.com/en/actions/using-workflows/reusing-workflows
name: clean up code - remove breakpoints, blacking

on:
  workflow_call:
    inputs:
      black_exceptions:
        type: string
        required: false

permissions: write-all

env:
  GIT_USERNAME: github-action@github.com

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: setup merge
        run: |
          set -x
          git config --global user.email 'github-action@github.com'
          git config --global user.name 'github-action@github.com'
          # to trigger other workflows
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git fetch

      - name: remove breakpoint() instructions
        run: |
          find . -type f -name "*.py" -exec sed -i '/breakpoint()/d' {} +

      - name: put exceptions to gitignore so not blacked
        shell: python
        run: |
          import os
          from pathlib import Path
          exceptions = list(map(lambda x: x.strip(), '${{ inputs.black_exceptions }}'.split(",")))
          gitignore = Path(".gitignore")

          for exception in exceptions:
            gitignore.write_text(gitignore.read_text() + "\n" + exception)

      - uses: psf/black@stable

      - name: if dirty files, commit them again (careful with recursion)
        run: |
          set -ex
          git checkout -f .gitignore || true
          changes="$(git status --porcelain | python3 -c 'import sys; print(sum(1 for _ in sys.stdin))')"
          git config --global user.email "${GIT_USERNAME}"
          git config --global user.name "${GIT_USERNAME}"


          if [[ "$changes" != "0" ]]; then
            git add .
            git commit -am 'code cleanup'
            git push
          fi
        env:
          GH_TOKEN: ${{ github.token }}
